-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-04-05 22:23:28 AEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c
--   author:    Team G26
--              Edric Wu ewuu0001
--              Iris Wang xwan0336
--              Syndi Walton swal0075
--   last modify date: 05/04/2023

set echo on
SPOOL mf_schema_output.txt

DROP TABLE booking CASCADE CONSTRAINTS;

DROP TABLE chef CASCADE CONSTRAINTS;

DROP TABLE chef_arrangement CASCADE CONSTRAINTS;

DROP TABLE cuisine CASCADE CONSTRAINTS;

DROP TABLE customer CASCADE CONSTRAINTS;

DROP TABLE function_room CASCADE CONSTRAINTS;

DROP TABLE maintenance CASCADE CONSTRAINTS;

DROP TABLE payment CASCADE CONSTRAINTS;

DROP TABLE rate_history CASCADE CONSTRAINTS;

DROP TABLE room_evaluation CASCADE CONSTRAINTS;

DROP TABLE specialization CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE booking (
    book_id       NUMBER(7) NOT NULL,
    cust_id       NUMBER(7) NOT NULL,
    book_start    DATE NOT NULL,
    book_end      DATE NOT NULL,
    book_guestnum NUMBER(3) NOT NULL,
    book_baserate NUMBER(4, 2) NOT NULL,
    book_total    NUMBER(6, 2) NOT NULL,
    book_deco     CHAR(3),
    cuis_type     CHAR(3),
    room_id       NUMBER(7)
);

ALTER TABLE booking
    ADD CHECK ( book_deco IN ( 'ALL', 'BDY', 'KID', 'OUT', 'WED' ) );

ALTER TABLE booking
    ADD CHECK ( cuis_type IN ( 'CHN', 'IND', 'JAP', 'WES' ) );

COMMENT ON COLUMN booking.book_id IS
    'Booking ID';

COMMENT ON COLUMN booking.cust_id IS
    'Customer ID';

COMMENT ON COLUMN booking.book_start IS
    'Function start date and time for customer booking';

COMMENT ON COLUMN booking.book_end IS
    'Function end date and time for customer booking';

COMMENT ON COLUMN booking.book_guestnum IS
    'Number of guests in the function for customer booking';

COMMENT ON COLUMN booking.book_baserate IS
    'Base rate per customer for the function';

COMMENT ON COLUMN booking.book_total IS
    'Total cost for customer booking';

COMMENT ON COLUMN booking.book_deco IS
    'Decoration theme for the function';

COMMENT ON COLUMN booking.cuis_type IS
    'Cuisine type';

COMMENT ON COLUMN booking.room_id IS
    'Room ID';

ALTER TABLE booking ADD CONSTRAINT booking_pk PRIMARY KEY ( book_id );

ALTER TABLE booking ADD CONSTRAINT booking_natural_key UNIQUE ( book_start,
                                                                cust_id );

CREATE TABLE chef (
    chef_id      NUMBER(7) NOT NULL,
    chef_fname   VARCHAR2(50) NOT NULL,
    chef_lname   VARCHAR2(50) NOT NULL,
    chef_contact CHAR(10) NOT NULL,
    chef_hourly  NUMBER(2, 2) NOT NULL
);

COMMENT ON COLUMN chef.chef_id IS
    'Chef ID';

COMMENT ON COLUMN chef.chef_fname IS
    'Chef first name';

COMMENT ON COLUMN chef.chef_lname IS
    'Chef last name';

COMMENT ON COLUMN chef.chef_contact IS
    'Chef''s phone number';

COMMENT ON COLUMN chef.chef_hourly IS
    'Chef''s hourly rate';

ALTER TABLE chef ADD CONSTRAINT chef_pk PRIMARY KEY ( chef_id );

CREATE TABLE chef_arrangement (
    book_id NUMBER(7) NOT NULL,
    chef_id NUMBER(7) NOT NULL
);

COMMENT ON COLUMN chef_arrangement.book_id IS
    'Booking ID';

COMMENT ON COLUMN chef_arrangement.chef_id IS
    'Chef ID';

ALTER TABLE chef_arrangement ADD CONSTRAINT chef_arrangement_pk PRIMARY KEY ( chef_id
,
                                                                              book_id
                                                                              );

CREATE TABLE cuisine (
    cuis_type CHAR(3) NOT NULL,
    cuis_rate NUMBER(3) NOT NULL
);

ALTER TABLE cuisine
    ADD CHECK ( cuis_type IN ( 'CHN', 'IND', 'JAP', 'WES' ) );

COMMENT ON COLUMN cuisine.cuis_type IS
    'Cuisine type';

COMMENT ON COLUMN cuisine.cuis_rate IS
    'Cuisine rate per customer';

ALTER TABLE cuisine ADD CONSTRAINT cuisine_pk PRIMARY KEY ( cuis_type );

CREATE TABLE customer (
    cust_id      NUMBER(7) NOT NULL,
    cust_ftname  VARCHAR2(50) NOT NULL,
    cust_lname   VARCHAR2(50) NOT NULL,
    cust_busname VARCHAR2(100),
    cust_street  VARCHAR2(100) NOT NULL,
    cust_suburb  VARCHAR2(100) NOT NULL,
    cust_contact VARCHAR2(10) NOT NULL
);

COMMENT ON COLUMN customer.cust_id IS
    'Customer ID';

COMMENT ON COLUMN customer.cust_ftname IS
    'Customer first name';

COMMENT ON COLUMN customer.cust_lname IS
    'Customer last name';

COMMENT ON COLUMN customer.cust_busname IS
    'Customer business name';

COMMENT ON COLUMN customer.cust_street IS
    'Customer''s street';

COMMENT ON COLUMN customer.cust_suburb IS
    'Customer''s address (Suburb)';

COMMENT ON COLUMN customer.cust_contact IS
    'Customer contact number';

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( cust_id );

CREATE TABLE function_room (
    room_id     NUMBER(7) NOT NULL,
    room_street VARCHAR2(100) NOT NULL,
    room_suburb VARCHAR2(100) NOT NULL,
    room_cap    NUMBER(4) NOT NULL,
    room_rate   NUMBER(4) NOT NULL,
    room_park   CHAR(1) NOT NULL
);

ALTER TABLE function_room
    ADD CHECK ( room_park IN ( 'N', 'Y' ) );

COMMENT ON COLUMN function_room.room_id IS
    'Room ID';

COMMENT ON COLUMN function_room.room_street IS
    'Function room''s street address';

COMMENT ON COLUMN function_room.room_suburb IS
    'Function room''s suburb';

COMMENT ON COLUMN function_room.room_cap IS
    'Room capacity for maximum guest numbers';

COMMENT ON COLUMN function_room.room_rate IS
    'Function room''s hourly rate';

COMMENT ON COLUMN function_room.room_park IS
    'Whether the function room has on-site parking';

ALTER TABLE function_room ADD CONSTRAINT function_room_pk PRIMARY KEY ( room_id );

CREATE TABLE maintenance (
    maint_id       NUMBER(7) NOT NULL,
    room_id        NUMBER(7) NOT NULL,
    maint_datetime DATE NOT NULL,
    re_id          NUMBER(7) NOT NULL
);

COMMENT ON COLUMN maintenance.maint_id IS
    'Maintenance ID';

COMMENT ON COLUMN maintenance.room_id IS
    'Room ID';

COMMENT ON COLUMN maintenance.maint_datetime IS
    'Maintenance date and time';

COMMENT ON COLUMN maintenance.re_id IS
    'Evaluation ID';

CREATE UNIQUE INDEX maintenance__idx ON
    maintenance (
        re_id
    ASC );

ALTER TABLE maintenance ADD CONSTRAINT maintenance_pk PRIMARY KEY ( maint_id );

ALTER TABLE maintenance ADD CONSTRAINT maintenance_natural_key UNIQUE ( room_id,
                                                                        maint_datetime
                                                                        );

CREATE TABLE payment (
    pay_no     NUMBER(10) NOT NULL,
    cust_id    NUMBER(7) NOT NULL,
    book_id    NUMBER(7) NOT NULL,
    pay_date   DATE NOT NULL,
    pay_amount NUMBER(6, 2) NOT NULL
);

COMMENT ON COLUMN payment.pay_no IS
    'Payment number';

COMMENT ON COLUMN payment.cust_id IS
    'Customer ID';

COMMENT ON COLUMN payment.book_id IS
    'Booking ID';

COMMENT ON COLUMN payment.pay_date IS
    'Payment date';

COMMENT ON COLUMN payment.pay_amount IS
    'Payment amount';

CREATE UNIQUE INDEX payment__idx ON
    payment (
        book_id
    ASC );

ALTER TABLE payment ADD CONSTRAINT payment_pk PRIMARY KEY ( pay_no );

ALTER TABLE payment ADD CONSTRAINT payment_natural_key UNIQUE ( cust_id,
                                                                book_id );

CREATE TABLE rate_history (
    room_id    NUMBER(7) NOT NULL,
    rh_recrate NUMBER(4) NOT NULL,
    rh_recdate DATE NOT NULL
);

COMMENT ON COLUMN rate_history.room_id IS
    'Room ID';

COMMENT ON COLUMN rate_history.rh_recrate IS
    'Recorded hourly rate for function room';

COMMENT ON COLUMN rate_history.rh_recdate IS
    'The date when room rate is recorded';

ALTER TABLE rate_history ADD CONSTRAINT rate_history_pk PRIMARY KEY ( room_id );

CREATE TABLE room_evaluation (
    re_id   NUMBER(7) NOT NULL,
    room_id NUMBER(7) NOT NULL,
    re_chk  DATE NOT NULL,
    chef_id NUMBER(7) NOT NULL,
    re_apr  CHAR(1) NOT NULL,
    re_cmt  VARCHAR2(200)
);

ALTER TABLE room_evaluation
    ADD CHECK ( re_apr IN ( 'N', 'Y' ) );

COMMENT ON COLUMN room_evaluation.re_id IS
    'Evaluation ID';

COMMENT ON COLUMN room_evaluation.room_id IS
    'Room ID';

COMMENT ON COLUMN room_evaluation.re_chk IS
    'Date of the function room checked';

COMMENT ON COLUMN room_evaluation.chef_id IS
    'Chef ID';

COMMENT ON COLUMN room_evaluation.re_apr IS
    'Whether the room is approved for use';

COMMENT ON COLUMN room_evaluation.re_cmt IS
    'Comments on the function room appliances';

ALTER TABLE room_evaluation ADD CONSTRAINT evaluation_pk PRIMARY KEY ( re_id );

ALTER TABLE room_evaluation ADD CONSTRAINT evaluation_natural_key UNIQUE ( re_chk,
                                                                           room_id );

CREATE TABLE specialization (
    chef_id   NUMBER(7) NOT NULL,
    cuis_type CHAR(3) NOT NULL,
    spec_acq  DATE
);

COMMENT ON COLUMN specialization.chef_id IS
    'Chef ID';

COMMENT ON COLUMN specialization.cuis_type IS
    'Cuisine type';

COMMENT ON COLUMN specialization.spec_acq IS
    'The date when the chef acquire the specialization';

ALTER TABLE specialization ADD CONSTRAINT specialization_pk PRIMARY KEY ( chef_id,
                                                                          cuis_type )
                                                                          ;

ALTER TABLE chef_arrangement
    ADD CONSTRAINT booking_chef_arrange FOREIGN KEY ( book_id )
        REFERENCES booking ( book_id );

ALTER TABLE booking
    ADD CONSTRAINT booking_functionroom FOREIGN KEY ( room_id )
        REFERENCES function_room ( room_id );

ALTER TABLE payment
    ADD CONSTRAINT booking_payment FOREIGN KEY ( book_id )
        REFERENCES booking ( book_id );

ALTER TABLE chef_arrangement
    ADD CONSTRAINT chef_chefarrangement FOREIGN KEY ( chef_id )
        REFERENCES chef ( chef_id );

ALTER TABLE room_evaluation
    ADD CONSTRAINT chef_roomeval FOREIGN KEY ( chef_id )
        REFERENCES chef ( chef_id );

ALTER TABLE specialization
    ADD CONSTRAINT chef_spec FOREIGN KEY ( chef_id )
        REFERENCES chef ( chef_id );

ALTER TABLE booking
    ADD CONSTRAINT cuisine_booking FOREIGN KEY ( cuis_type )
        REFERENCES cuisine ( cuis_type );

ALTER TABLE specialization
    ADD CONSTRAINT cuisine_spec FOREIGN KEY ( cuis_type )
        REFERENCES cuisine ( cuis_type );

ALTER TABLE booking
    ADD CONSTRAINT customer_booking FOREIGN KEY ( cust_id )
        REFERENCES customer ( cust_id );

ALTER TABLE payment
    ADD CONSTRAINT customer_payment FOREIGN KEY ( cust_id )
        REFERENCES customer ( cust_id );

ALTER TABLE room_evaluation
    ADD CONSTRAINT froom_evaluation FOREIGN KEY ( room_id )
        REFERENCES function_room ( room_id );

ALTER TABLE maintenance
    ADD CONSTRAINT froom_maintenance FOREIGN KEY ( room_id )
        REFERENCES function_room ( room_id );

ALTER TABLE rate_history
    ADD CONSTRAINT room_rate_history FOREIGN KEY ( room_id )
        REFERENCES function_room ( room_id );

ALTER TABLE maintenance
    ADD CONSTRAINT roomeval_maintenance FOREIGN KEY ( re_id )
        REFERENCES room_evaluation ( re_id );

SPOOL OFF
SET ECHO OFF

-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             2
-- ALTER TABLE                             34
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

